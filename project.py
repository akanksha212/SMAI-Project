# -*- coding: utf-8 -*-
"""Untitled11.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-lp35VztqfcgRV44hJAwR-BShBPbntB3
"""

import numpy as np
import pandas as pd

from PIL import Image
import matplotlib.pyplot as plt
import matplotlib.image as mpimg

im = Image.open('YM.SU3.60.tiff')

im.show()

img2=im.crop((70,90,184,230))

imarray = np.array(img2)

print(imarray.shape)

print(imarray)

imgplot = plt.imshow(im)
plt.show()

imgplot = plt.imshow(img2)
plt.show()

def mean(Img, i,j):

  a=int((N-1)/2)
  u=0

  valid_cnt = 0
  for k in range(-a,a):
    for h in range(-a,a):
      if((k+i)>0 and (k+i)<Img.shape[0] and (h+j)>0 and (h+j)<Img.shape[1]):
        u=u+imarray[k+i][h+j]
        valid_cnt = valid_cnt + 1

  u=np.float128(u/(valid_cnt*valid_cnt))
  return u

def st_dev(Img, i,j):
  a=int((N-1)/2)
  sd=0

  valid_cnt = 0
  for k in range(-a,a):
    for h in range(-a,a):
      if((k+i)>0 and (k+i)<Img.shape[0] and (h+j)>0 and (h+j)<Img.shape[1]):
        m=mean(Img, i,j)
        sd=sd+np.square(imarray[k+i][h+j]-m)
        valid_cnt = valid_cnt + 1
  sd=np.float128(sd/(valid_cnt*valid_cnt))
  sd=np.sqrt(sd)
  return sd

def normalize(Img, i,j):

  print("index",i,j)
  m=mean(Img, i,j)
  sd=st_dev(Img, i,j)
  print("mean std",m, sd)
  imarray[i][j]=np.float128((imarray[i][j]-m)/(6*sd))

N = 11

for i in range(0,imarray.shape[0]):
  for j in range(0,imarray.shape[1]):
    normalize(imarray, i,j)

img3 = Image.fromarray(imarray)
imgplot = plt.imshow(img3)
plt.show()
