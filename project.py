# -*- coding: utf-8 -*-
"""Untitled11.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-lp35VztqfcgRV44hJAwR-BShBPbntB3
"""

import numpy as np
import pandas as pd

from PIL import Image
import matplotlib.pyplot as plt
import matplotlib.image as mpimg

def Load_Img(Img_Path='YM.SU3.60.tiff'):

  img = Image.open(Img_Path)
  img.show()
  return img

def Crop_Img(Img, Dim_Tuple=(70,90,184,230)):

  cropped_img = Img.crop(Dim_Tuple)
  imgarray = np.array(cropped_img)

  print(imgarray.shape)
  print(imgarray)

  return imgarray

def Display_Img(imgarray):
  img = Image.fromarray(imgarray)
  imgplot = plt.imshow(img)
  plt.show()

def mean(Img, i,j, N):

  a=int((N-1)/2)
  u=0

  valid_cnt = 0
  for k in range(-a,a):
    for h in range(-a,a):
      if((k+i)>0 and (k+i)<Img.shape[0] and (h+j)>0 and (h+j)<Img.shape[1]):
        u=u+Img[k+i][h+j]
        valid_cnt = valid_cnt + 1

  u=np.float128(u/(valid_cnt*valid_cnt))
  return u

def st_dev(Img, i,j, N):

  a=int((N-1)/2)
  sd=0

  valid_cnt = 0
  for k in range(-a,a):
    for h in range(-a,a):
      if((k+i)>0 and (k+i)<Img.shape[0] and (h+j)>0 and (h+j)<Img.shape[1]):
        m=mean(Img, i,j, N)
        sd=sd+np.square(Img[k+i][h+j]-m)
        valid_cnt = valid_cnt + 1

  sd=np.float128(sd/(valid_cnt*valid_cnt))
  sd=np.sqrt(sd)

  return sd

def normalize(Img, N=11):

  Normalized_Img = np.zeros(Img.shape)

  for i in range(0,Img.shape[0]):
    for j in range(0,Img.shape[1]):

      print("index",i,j)
      m=mean(Img, i,j, N)
      sd=st_dev(Img, i,j, N)
      print("mean std",m, sd)

      Normalized_Img[i][j]=np.float128((Img[i][j]-m)/(6*sd))

  return Normalized_Img

Img = Load_Img('YM.SU3.60.tiff')

imgplot = plt.imshow(Img)
plt.show()

Cropped_Img = Crop_Img(Img)
Display_Img(Cropped_Img)

Normalized_Img = normalize(Cropped_Img, 11)

print("Normalized Image array: ", Normalized_Img)
Display_Img(Normalized_Img)

Feature_Detection_Img = normalize(Normalized_Img, 11)

print("Features detected array: ", Feature_Detection_Img)
Display_Img(Feature_Detection_Img)
